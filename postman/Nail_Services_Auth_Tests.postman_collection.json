{
	"info": {
		"_postman_id": "b5d8f3e2-1234-5678-9abc-def012345678",
		"name": "Nail Services Auth Tests",
		"description": "Test collection for Nail Services Authentication API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Reset Database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Database reset successful\", function () {",
							"    pm.response.to.have.body(\"Database reset successful\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/test/reset-db",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "test", "reset-db"]
				}
			}
		},
		{
			"name": "Customer Registration - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.expect(jsonData.token.length).to.be.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phoneNumber\": \"+1234567890\",\n    \"role\": \"CUSTOMER\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/register",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "register"]
				}
			}
		},
		{
			"name": "Customer Registration - Email Already Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"",
							"pm.test(\"Error response structure is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(409);",
							"    pm.expect(jsonData.error).to.eql('EMAIL_ALREADY_EXISTS');",
							"    pm.expect(jsonData.message).to.include('Email already exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phoneNumber\": \"+1234567890\",\n    \"role\": \"CUSTOMER\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/register",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "register"]
				}
			}
		},
		{
			"name": "Customer Registration - Invalid Input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error response structure is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(400);",
							"    pm.expect(jsonData.error).to.eql('VALIDATION_ERROR');",
							"    pm.expect(jsonData.message).to.eql('Validation failed');",
							"    pm.expect(jsonData.details).to.be.an('object');",
							"    pm.expect(Object.keys(jsonData.details).length).to.be.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"123\",\n    \"firstName\": \"\",\n    \"lastName\": \"Doe\",\n    \"phoneNumber\": \"invalid\",\n    \"role\": \"CUSTOMER\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/register",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "register"]
				}
			}
		},
		{
			"name": "Provider Registration - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.expect(jsonData.token.length).to.be.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"provider@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"Jane\",\n    \"lastName\": \"Smith\",\n    \"phoneNumber\": \"+1987654321\",\n    \"businessName\": \"Jane's Nail Salon\",\n    \"description\": \"Professional nail care services\",\n    \"role\": \"PROVIDER\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/register",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "register"]
				}
			}
		},
		{
			"name": "Login - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.expect(jsonData.token.length).to.be.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"password123\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/login",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "login"]
				}
			}
		},
		{
			"name": "Login - Invalid Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"pm.test(\"Error response structure is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(401);",
							"    pm.expect(jsonData.error).to.eql('INVALID_CREDENTIALS');",
							"    pm.expect(jsonData.message).to.include('Invalid email or password');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"customer@example.com\",\n    \"password\": \"wrongpassword\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/auth/login",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8080",
					"path": ["api", "auth", "login"]
				}
			}
		}
	]
}
