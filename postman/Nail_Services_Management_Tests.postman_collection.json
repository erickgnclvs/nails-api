{
	"info": {
		"_postman_id": "unique-id",
		"name": "Nail Services Management Tests v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Provider Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    pm.expect(jsonData.token).to.exist;",
									"});",
									"",
									"if (jsonData.token) {",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"provider@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						}
					}
				}
			]
		},
		{
			"name": "Service Categories",
			"item": [
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Categories have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('id');",
									"        pm.expect(jsonData[0]).to.have.property('name');",
									"        pm.expect(jsonData[0]).to.have.property('description');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "categories"]
						}
					}
				}
			]
		},
		{
			"name": "Nail Services",
			"item": [
				{
					"name": "Create Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Service created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.equal(\"Classic Manicure\");",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.duration).to.equal(45);",
									"    pm.expect(jsonData.price).to.equal(35.00);",
									"    ",
									"    if (jsonData.id) {",
									"        pm.environment.set(\"service_id\", jsonData.id.toString());",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Classic Manicure\",\n    \"description\": \"A relaxing manicure with nail shaping, cuticle care, and polish\",\n    \"categoryId\": 1,\n    \"duration\": 45,\n    \"price\": 35.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/services",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services"]
						}
					}
				},
				{
					"name": "Get Service By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Service details are correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.exist;",
									"    pm.expect(jsonData.description).to.exist;",
									"    pm.expect(jsonData.duration).to.exist;",
									"    pm.expect(jsonData.price).to.exist;",
									"    pm.expect(jsonData.category).to.exist;",
									"    pm.expect(jsonData.category.id).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/services/{{service_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services", "{{service_id}}"]
						}
					}
				},
				{
					"name": "Update Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Service updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.equal(\"Luxury Classic Manicure\");",
									"    pm.expect(jsonData.duration).to.equal(60);",
									"    pm.expect(jsonData.price).to.equal(45.00);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Luxury Classic Manicure\",\n    \"description\": \"A premium manicure with nail shaping, cuticle care, hand massage, and polish\",\n    \"categoryId\": 1,\n    \"duration\": 60,\n    \"price\": 45.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/services/{{service_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services", "{{service_id}}"]
						}
					}
				},
				{
					"name": "Delete Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/services/{{service_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services", "{{service_id}}"]
						}
					}
				},
				{
					"name": "Search Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Search response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.exist.and.to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"    pm.expect(jsonData.size).to.exist;",
									"    pm.expect(jsonData.number).to.exist;",
									"});",
									"",
									"pm.test(\"Search results contain valid services\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.content.length > 0) {",
									"        pm.expect(jsonData.content[0].id).to.exist;",
									"        pm.expect(jsonData.content[0].name).to.exist;",
									"        pm.expect(jsonData.content[0].price).to.exist;",
									"        pm.expect(jsonData.content[0].duration).to.exist;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/services/search?query=manicure&page=0&size=10",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services", "search"],
							"query": [
								{
									"key": "query",
									"value": "manicure"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Get Provider Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Provider services response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.content).to.exist.and.to.be.an('array');",
									"    pm.expect(jsonData.totalElements).to.exist;",
									"    pm.expect(jsonData.totalPages).to.exist;",
									"    pm.expect(jsonData.size).to.exist;",
									"    pm.expect(jsonData.number).to.exist;",
									"});",
									"",
									"pm.test(\"Provider services contain valid data\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.content.length > 0) {",
									"        pm.expect(jsonData.content[0].id).to.exist;",
									"        pm.expect(jsonData.content[0].name).to.exist;",
									"        pm.expect(jsonData.content[0].price).to.exist;",
									"        pm.expect(jsonData.content[0].duration).to.exist;",
									"        pm.expect(jsonData.content[0].providerId).to.exist;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/services/provider/1?page=0&size=10",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "services", "provider", "1"],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		},
		{
			"key": "auth_token",
			"value": ""
		}
	]
}
